@model IEnumerable<JustBlog.Core.Objects.Tag>

@{
    AjaxOptions ajaxOptions = new AjaxOptions
    {
        UpdateTargetId = "tableBody",
        OnBegin = "openDialog",
        InsertionMode = InsertionMode.Replace,
        Url = Url.Action("DeleteTag", "Tag"),
        HttpMethod = "Post",
        OnSuccess = "processView"
    };
}

<div class="mb-2">
        @*@Html.ActionLink("Add a new post", "CreatePost", "Admin",
            new { @class = "btn btn-default" })*@
        @Ajax.ActionLink("Добавить тег", "Admin",
                    null,
                    new AjaxOptions
                    {
                        Url = Url.RouteUrl(new {controller = "Tag", action = "EditTag", id = 0 }),
                        HttpMethod = "GET",
                        OnBegin = "IsLoading",
                        OnSuccess = "SetContent",
                        OnFailure = "AlertUser"
                    },
                    new { @class = "btn btn-outline-primary" }
                )
</div>

<table class="table table-striped table-condensed table-bordered">
    <tr>
        <th class="text-right"></th>
        <th>Заголовок</th>
        <th class="text-right">Описание</th>
        <th class="text-left">Вид в строке запроса</th>
        <th class="text-center">Действие</th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td class="text-right">@item.Id</td>
            <td>
                @Ajax.ActionLink(item.Name, "Admin", new AjaxOptions
                {
                    Url = Url.RouteUrl(new { controller = "Tag", action = "EditTag", id = item.Id }),
                    HttpMethod = "GET",
                    OnBegin = "IsLoading",
                    OnSuccess = "SetContent",
                    OnFailure = "AlertUser",
                    OnComplete = "SetValidation"
                })
            </td>
            <td class="text-right">@item.Description</td>
            <td class="text-left">@item.UrlSlug</td>
            <td class="text-center">
                @using (Ajax.BeginForm(ajaxOptions))
                {
                    @Html.Hidden("id", item.Id)
                    <input type="submit"
                           class="btn btn-outline-secondary btn-xs"
                           value="Delete" />
                }
            </td>
        </tr>
    }
</table>

<script>

    function openDialog() {
        var conf = confirm("Вы уверены, что хотитие удалить объект?");
        if (conf == true) {
            return true;
        }
        return false;
    };

    //OnSuccess ajax
    function processView() {
        hideLoader();
        //$("#table-striped").first().remove();
        //prv.remove();
    }

    var clickedCounter;
    $(function () {
        //TODO: отменяет повторный вызов AJAX если != 1
        clickedCounter = 0;
    });

    function IsLoading() {
        clickedCounter += 1;
        if (clickedCounter === 1) {
            return true;
        }
        return false;
    }
    function SetValidation() {
        $('#submittedForm').removeData('validator');
        $('#submittedForm').removeData('unobtrusiveValidation');
        $("#submittedForm").each(function () { $.data($(this)[0], 'validator', false); }); //enable to display the error messages
        $.validator.unobtrusive.parse("#submittedForm");
    }

    function SetContent(data) {
        //обнуляем счетчик кликов
        clickedCounter = 0;

        //очищаем и заполняем modal-content html датой
        var modal = $("#target").empty().html(data);
        $("#editModal").modal({
            backdrop: 'static',
            keyboard: false
        });
        hideLoader();
    }

    function AlertUser(err) {
        alert(err.Message);
        clickedCounter = 0;
    }
</script>

@section scripts {
    @* TODO: загрузить скрипт для AjaxOptions *@
}
