@model JustBlog.Models.Admin.CategoryEditViewModel

@{
    Layout = null;
}

<div class="modal-header">
    <h5 class="modal-title" id="exampleModalLongTitle">Edit Post</h5>
    <button type="button" class="close" aria-label="Close" id="btnClose1">
        <span aria-hidden="true">&times;</span>
    </button>
</div>

<div class="modal-body">
    @using (Html.BeginForm("EditCategory", "Category", FormMethod.Post, new { id = "submittedForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Category.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Category.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category.UrlSlug, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category.UrlSlug, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category.UrlSlug, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category.Description, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="modal-footer">
            <input type="submit" value="Submit" class="btn btn-primary" id="btnSubmit" />
            <button type="button" class="btn btn-secondary closefirstmodal" id="btnClose2">Close</button>
        </div>
    }
</div>

@Scripts.Render("~/bundles/jqueryval")

<script>
    $(function () {
        let dataChanged = false;

        $("#submittedForm").submit(function (e) {
            clickedOnce = true;
            e.preventDefault();
            //to the implementation in partial view reload the validators
            var _form = $("#submittedForm")
                .removeData("validator") /* added by the raw jquery.validate plugin */
                .removeData("unobtrusiveValidation");/* added by the jquery unobtrusive plugin */
            var _formValue = $(this)[0];

           $.validator.unobtrusive.parse(_form);

            var isValid = _form.valid();
            console.log(isValid);
            console.log("");
            console.log(_form.data('unobtrusiveValidation'));


            if (isValid) {
                let _data = new FormData(_formValue);

                $.ajax({
                    method: "POST",
                    processData: false,
                    cache: false,
                    contentType: false,
                    url: '@Url.RouteUrl(new { controller = "Category", action = "EditCategory"})',
                    data: _data,
                    success: function (response) {
                        if (response.success == true) {
                            alert(response.responseText);
                            $("#editModal").modal('hide');
                            dataChanged = false;
                            //reload page
                            location.reload();
                        } else {
                            // DoSomethingElse()
                            alert(response.responseText);
                        }


                    },
                    error: function (jqXHR) {
                        alert("Что-то пошло не так...\nНеудалось отправить форму");
                    }
                })
                    .done(function (data, textStatus, jqXHR) {

                })
            }
        })

        $("input, select").change(function () {
            dataChanged = true;
        })

        $("#btnClose1, #btnClose2").click(function (e) {
            e.preventDefault();
            //debugger;
            if (dataChanged) {
                var closeConfirmed = confirm("Были внесены изменения. \nЗакрыть окно?");
                if (closeConfirmed) {
                    $("#editModal").modal('hide');
                    dataChanged = false;
                    $("#target").empty();
                }
            }
            else {
                $("#editModal").modal('hide');
                dataChanged = false;
                $("#target").empty();
            }
            //$("#target").empty();
        })

    })
</script>
