@model JustBlog.Models.Admin.CategoryEditViewModel

@{
    Layout = null;
    HtmlHelper.ClientValidationEnabled = true;
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;
}

<div class="modal-header">
    <h5 class="modal-title" id="exampleModalLongTitle">Редактирование категории</h5>
    <button type="button" class="close" aria-label="Close" id="btnClose1">
        <span aria-hidden="true">&times;</span>
    </button>
</div>

<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>

<div class="modal-body">
    @using (Html.BeginForm("EditCategory", "Category", FormMethod.Post, new { id = "submittedForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Category.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Category.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category.UrlSlug, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category.UrlSlug, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category.UrlSlug, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @if (Model.IncludedPosts != null)
                {
                    <p>
                        <button class="btn btn-primary ml-2" id="btnShowPosts" type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
                            Показать связанные посты
                        </button>
                    </p>
                    <div class="collapse" id="collapseExample">
                        <div class="card card-body" id="postsTarget">

                        </div>
                    </div>
                }
                else
                {
                    <a class="btn btn-primary" data-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample" disabled>
                        Link with href
                    </a>
                }
            </div>

        </div>

        <div class="modal-footer">
            <input type="submit" value="Submit" class="btn btn-primary" id="btnSubmit" />
            <button type="button" class="btn btn-secondary closefirstmodal" id="btnClose2">Close</button>
        </div>
    }
</div>

@*@Scripts.Render("~/bundles/jqueryval")*@

<script>
    $(function ()
    {
        $('#submittedForm').removeData('validator');
        $('#submittedForm').removeData('unobtrusiveValidation');
        $("#submittedForm").each(function () { $.data($(this)[0], 'validator', false); }); //enable to display the error messages
        $.validator.unobtrusive.parse("#submittedForm");

        
    })

    var _postCategory = '@Url.RouteUrl(new { controller = "Category", action = "EditCategory"})';
        var _getCategories = '@Url.Action("GetCategoriesData", "Category")';

    

    @*$(function () {
        let dataChanged = false;

        $("#btnShowPosts").click(function (e) {
            if ($("#postsTarget").has("#")) {

            }
        });

        $("#submittedForm").submit(function (e) {
            clickedOnce = true;
            e.preventDefault();
            //to the implementation in partial view reload the validators
            var _form = $("#submittedForm")
                .removeData("validator") /* added by the raw jquery.validate plugin */
                .removeData("unobtrusiveValidation");/* added by the jquery unobtrusive plugin */
            var _formValue = $(this)[0];

           $.validator.unobtrusive.parse(_form);

            var isValid = _form.valid();
            console.log(isValid);
            console.log("");
            console.log(_form.data('unobtrusiveValidation'));


            if (isValid) {
                let _data = new FormData(_formValue);

                $.ajax({
                    method: "POST",
                    processData: false,
                    cache: false,
                    contentType: false,
                    url: '@Url.RouteUrl(new { controller = "Category", action = "EditCategory"})',
                    data: _data,
                    success: function (response) {
                        if (response.success == true) {
                            alert(response.responseText);
                            $("#editModal").modal('hide');
                            dataChanged = false;
                            //reload page
                            //location.reload();

                            $.ajax({
                                method: "GET",
                                url: '@Url.Action("GetCategoriesData", "Category")',
                                dataType: "html",
                                //update partly
                                success: function (response) {
                                    $("#tableBody").empty().html(response);
                                },
                                //update fully
                                error: function () {
                                    location.reload();
                                }
                            });

                        } else {
                            // DoSomethingElse()
                            alert(response.responseText);
                        }


                    },
                    error: function (jqXHR) {
                        alert("Что-то пошло не так...\nНеудалось отправить форму");
                    }
                })
                    .done(function (data, textStatus, jqXHR) {

                })
            }
        })

        $("input, select").change(function () {
            dataChanged = true;
        })

        $("#btnClose1, #btnClose2").click(function (e) {
            e.preventDefault();
            //debugger;
            if (dataChanged) {
                var closeConfirmed = confirm("Были внесены изменения. \nЗакрыть окно?");
                if (closeConfirmed) {
                    $("#editModal").modal('hide');
                    dataChanged = false;
                    $("#target").empty();
                }
            }
            else {
                $("#editModal").modal('hide');
                dataChanged = false;
                $("#target").empty();
            }
            //$("#target").empty();
        })

    })*@
</script>

@Scripts.Render(Url.Content("~/Scripts/Assets/Category/EditCategory/pageCategoryConrol.js"))
