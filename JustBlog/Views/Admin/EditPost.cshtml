@model JustBlog.Models.Admin.PostEditViewModel
@using JustBlog.Models.Admin
@using JustBlog.Core.Objects
@{
    ViewBag.Title = "EditPost";
    //Layout = "~/Views/Shared/_AdminLayout.cshtml";
    Layout = null;
    var mod = Model;
    var cachedSelectList = Cache["CategorySelectList"] as List<SelectListItem>;
    string selectedId = cachedSelectList.FirstOrDefault(s => s.Selected)?.Value ?? "0";
    HtmlHelper.ClientValidationEnabled = true;
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;

}

<div class="modal-header">
    <h5 class="modal-title" id="exampleModalLongTitle">Edit Post</h5>
    <button type="button" class="close" aria-label="Close" id="btnClose1">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="modal-body">
    @using (Html.BeginForm("EditPost", "Post", FormMethod.Post, new { id = "submittedForm", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(m => m.Post.Id)

        <div class="form-group">
            @Html.LabelFor(m => m.Post.Title, new { @class = "control-label col-md-6" })
            <div class="col-12">
                @Html.TextBoxFor(m => m.Post.Title,
                                                            new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Post.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Post.ShortDescription, new { @class = "control-label col-md-6" })
            <div class="col-12">
                @Html.TextBoxFor(m => m.Post.ShortDescription,
                                                  new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Post.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Post.Meta, new { @class = "control-label col-md-6" })
            <div class="col-12">
                @Html.TextBoxFor(m => m.Post.Meta,
                                                 new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Post.Meta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Post.UrlSlug, new { @class = "control-label col-md-6" })
            <div class="col-12">
                @Html.TextBoxFor(m => m.Post.UrlSlug,
                                                 new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Post.UrlSlug, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Post.Published, new { @class = "control-label" })
            <div class="col-12">
                @Html.EditorFor(m => m.Post.Published,
                                                    new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Post.Published, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Post.PostedOn, new { @class = "control-label col-md-6" })
            <div class="col-12">
                @Html.EditorFor(m => m.Post.PostedOn,
                                          new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Post.PostedOn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Post.Modified, new { @class = "control-label col-md-6" })
            <div class="col-12">
                @Html.EditorFor(m => m.Post.Modified,
                                 new { htmlAttributes = new { @class = "form-control", id = "datePicker" } })
                @Html.ValidationMessageFor(m => m.Post.Modified, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Категория", new { @class = "control-label col-md-6" })
            <div class="col-12">
                @Html.DropDownListFor(m => m.CategoryListId,
                                                cachedSelectList,
                                                new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.CategoryListId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Теги", new { @class = "control-label col-md-6" })
            <div class="col-12">
                <input name='tags' value="@ViewData["tagsValue"]">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Post.Description, new { @class = "control-label col-md-6" })
            <div class="col-12">
                @Html.TextAreaFor(s =>s.Post.Description,

                                 new { @class = "form-control", rows = 10, overflow_y = "scroll", resize = "none", id = "froala-editor" })
                @Html.ValidationMessageFor(m => m.Post.Description, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="modal-footer">
            <input type="submit" value="Submit" class="btn btn-primary" id="btnSubmit" />
            <button type="button" class="btn btn-secondary closefirstmodal" id="btnClose2">Close</button>
        </div>


    }
</div>

@Scripts.Render("~/bundles/jqueryval")

<script>
    $('textarea#froala-editor').on('froalaEditor.file.uploaded', function (e, editor, response) {
        console.log(e);
        console.log(editor);
        console.log(response);
    });

    $("textarea#froala-editor").on('froalaEditor.image.inserted', function (e, editor, $img, response) {
        console.log(e);
        console.log(editor);
        console.log($img);
        console.log(response);
    });

    $(function () {

        if (!$('textarea#froala-editor').data('froala.editor')) {
            $('textarea#froala-editor').froalaEditor({
                toolbarButtons: ['bold', 'italic', 'underline', 'strikeThrough', 'subscript', 'superscript', '|', 'fontSize', '|', 'paragraphFormat', 'align', 'formatOL', 'formatUL', 'outdent', 'indent', 'quote', '-', 'insertLink', 'insertImage', 'insertFile', '|', 'insertHR', 'selectAll', 'clearFormatting', '|', 'undo', 'redo'],
                imageUploadParam: 'image_param',
                imageUploadURL: '@Url.Action("TakeImage", "Image")',
                imageUploadParams: { id: 'my_editor' },
                imageUploadMethod: 'POST',
                imageMaxSize: 5 * 1024 * 1024,
                imageAllowedTypes: ['jpeg', 'jpg', 'png']
            }).on('froalaEditor.image.beforeUpload', function (e, editor, images) {
                // Return false if you want to stop the image upload.
                console.log(images);
                console.log();
            })
                .on('froalaEditor.image.uploaded', function (e, editor, response) {
                    // Image was uploaded to the server.
                    console.log(responce);
                    console.log();
                })
                .on('froalaEditor.image.inserted', function (e, editor, $img, response) {
                    // Image was inserted in the editor.
                    console.log($img);
                    console.log();
                })
                .on('froalaEditor.image.replaced', function (e, editor, $img, response) {
                    // Image was replaced in the editor.
                }).on('froalaEditor.image.error', function (e, editor, error, response) {
                    // Bad link.
                    if (error.code == 1) { }

                    // No link in upload response.
                    else if (error.code == 2) {  }

                    // Error during image upload.
                    else if (error.code == 3) {
                        console.log(error);
                    }

                    // Parsing response failed.
                    else if (error.code == 4) { }

                    // Image too text-large.
                    else if (error.code == 5) { }

                    // Invalid image type.
                    else if (error.code == 6) { }

                    // Image can be uploaded only to same domain in IE 8 and IE 9.
                    else if (error.code == 7) { }

        // Response contains the original server response to the request if available.
      });
        }


        //установка текущей даты свойству "дата изменения"
        document.getElementById("datePicker").valueAsDate = new Date()

        var tags = @Model.TagsListJson;

        var input3 = document.querySelector('input[name=tags]'),
            tagify3 = new Tagify(input3, {
                delimiters: ", ",
                suggestionsMinChars: 1,
                maxTags: 7,
                blacklist: ["fuck", "shit", "pussy"],
                enforceWhitelist: true,
                whitelist: tags//["temple", "stun", "detective", "sign", "passion", "routine", "deck", "discriminate", "relaxation", "fraud", "attractive", "soft", "forecast", "point", "thank", "stage", "eliminate", "effective", "flood", "passive", "skilled", "separation", "contact", "compromise", "reality", "district", "nationalist", "leg", "porter", "conviction", "worker", "vegetable", "commerce", "conception", "particle", "honor", "stick", "tail", "pumpkin", "core", "mouse", "egg", "population", "unique", "behavior", "onion", "disaster", "cute", "pipe", "sock", "dialect", "horse", "swear", "owner", "cope", "global", "improvement", "artist", "shed", "constant", "bond", "brink", "shower", "spot", "inject", "bowel", "homosexual", "trust", "exclude", "tough", "sickness", "prevalence", "sister", "resolution", "cattle", "cultural", "innocent", "burial", "bundle", "thaw", "respectable", "thirsty", "exposure", "team", "creed", "facade", "calendar", "filter", "utter", "dominate", "predator", "discover", "theorist", "hospitality", "damage", "woman", "rub", "crop", "unpleasant", "halt", "inch", "birthday", "lack", "throne", "maximum", "pause", "digress", "fossil", "policy", "instrument", "trunk", "frame", "measure", "hall", "support", "convenience", "house", "partnership", "inspector", "looting", "ranch", "asset", "rally", "explicit", "leak", "monarch", "ethics", "applied", "aviation", "dentist", "great", "ethnic", "sodium", "truth", "constellation", "lease", "guide", "break", "conclusion", "button", "recording", "horizon", "council", "paradox", "bride", "weigh", "like", "noble", "transition", "accumulation", "arrow", "stitch", "academy", "glimpse", "case", "researcher", "constitutional", "notion", "bathroom", "revolutionary", "soldier", "vehicle", "betray", "gear", "pan", "quarter", "embarrassment", "golf", "shark", "constitution", "club", "college", "duty", "eaux", "know", "collection", "burst", "fun", "animal", "expectation", "persist", "insure", "tick", "account", "initiative", "tourist", "member", "example", "plant", "river", "ratio", "view", "coast", "latest", "invite", "help", "falsify", "allocation", "degree", "feel", "resort", "means", "excuse", "injury", "pupil", "shaft", "allow", "ton", "tube", "dress", "speaker", "double", "theater", "opposed", "holiday", "screw", "cutting", "picture", "laborer", "conservation", "kneel", "miracle", "brand", "nomination", "characteristic", "referral", "carbon", "valley", "hot", "climb", "wrestle", "motorist", "update", "loot", "mosquito", "delivery", "eagle", "guideline", "hurt", "feedback", "finish", "traffic", "competence", "serve", "archive", "feeling", "hope", "seal", "ear", "oven", "vote", "ballot", "study", "negative", "declaration", "particular", "pattern", "suburb", "intervention", "brake", "frequency", "drink", "affair", "contemporary", "prince", "dry", "mole", "lazy", "undermine", "radio", "legislation", "circumstance", "bear", "left", "pony", "industry", "mastermind", "criticism", "sheep", "failure", "chain", "depressed", "launch", "script", "green", "weave", "please", "surprise", "doctor", "revive", "banquet", "belong", "correction", "door", "image", "integrity", "intermediate", "sense", "formal", "cane", "gloom", "toast", "pension", "exception", "prey", "random", "nose", "predict", "needle", "satisfaction", "establish", "fit", "vigorous", "urgency", "X-ray", "equinox", "variety", "proclaim", "conceive", "bulb", "vegetarian", "available", "stake", "publicity", "strikebreaker", "portrait", "sink", "frog", "ruin", "studio", "match", "electron", "captain", "channel", "navy", "set", "recommend", "appoint", "liberal", "missile", "sample", "result", "poor", "efflux", "glance", "timetable", "advertise", "personality", "aunt", "dog"]
            })


        $('#CategoryListId').val(@selectedId).change();
        $("#submittedForm").submit(function (e) {
            clickedOnce = true;
            e.preventDefault();
            var _form = $("#submittedForm")
                .removeData("validator") /* added by the raw jquery.validate plugin */
                .removeData("unobtrusiveValidation");
            var _formValue = $(this)[0];

           $.validator.unobtrusive.parse(_form);

            var isValid = _form.valid();
            console.log(isValid);
            console.log("");
            console.log(_form.data('unobtrusiveValidation'));


            if (isValid) {
                let _data = new FormData(_formValue);

                $.ajax({
                    method: "POST",
                    processData: false,
                    cache: false,
                    contentType: false,
                    url: '@Url.Action("EditPost", "Post")',
                    data: _data,
                    success: function (response) {
                        if (response.success == true) {
                            alert(response.responseText);
                            $("#editModal").modal('hide');
                            dataChanged = false;
                            location.reload();
                        } else {
                            // DoSomethingElse()
                            alert(response.responseText);
                        }


                    },
                    error: function (jqXHR) {
                        alert("Что-то пошло не так...");
                    }
                })
                    .done(function (data, textStatus, jqXHR) {

                })
            }
        })

        //изменял ли пользователь данные формы
        let dataChanged = false;

        //проверка на внесение изменений в данные формы
        $("input, select").change(function () {
            dataChanged = true;
        })

        //подтверждение закрытие модальной формы
        $("#btnClose1, #btnClose2").click(function (e) {
            e.preventDefault();
            if (dataChanged) {
                var closeConfirmed = confirm("Были внесены изменения. \nЗакрыть окно?");
                if (closeConfirmed) {
                    $("#editModal").modal('hide');
                    dataChanged = false;
                }
            }
            else {
                $("#editModal").modal('hide');
                dataChanged = false;
            }
            $("#target").empty();
        })
    })

    function InitEditor() {
        if (!$('#froala-editor').data('froala.editor')) {
            $('#froala-editor').froalaEditor();
        }
    }
</script>
